#include <iostream>
#include <string>
#include <vector>
#include <bitset>

int main() {
    std::string palabra = "tengounavacalechera"; // Ejemplo de una palabra
    std::vector<std::bitset<14>> gruposDe14Bits;

    std::string grupoBits; // Cadena temporal para almacenar cada grupo de 14 bits

    for (char c : palabra) {
        std::bitset<8> bits(c); // Convierte cada carácter en un objeto std::bitset de 8 bits
        grupoBits += bits.to_string();

        if (grupoBits.length() == 14) { // Cuando se alcanzan 14 bits, se almacena en el vector
            gruposDe14Bits.push_back(std::bitset<14>(grupoBits));
            grupoBits.clear();
        }
    }

    // Si queda algún grupo incompleto, agrégale ceros
    if (!grupoBits.empty()) {
        while (grupoBits.length() < 14) {
            grupoBits += "0";
        }
        gruposDe14Bits.push_back(std::bitset<14>(grupoBits));
    }

    // Imprime los grupos de 14 bits
    for (const std::bitset<14>& grupo : gruposDe14Bits) {
        std::cout << "Grupo de 14 bits: " << grupo << " (Valor operable: " << grupo.to_ulong() << ")" << std::endl;
    }

    return 0;
}
